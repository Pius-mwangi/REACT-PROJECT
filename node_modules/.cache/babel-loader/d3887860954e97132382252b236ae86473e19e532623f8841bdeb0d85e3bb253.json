{"ast":null,"code":"var _jsxFileName = \"/home/pius/FinalProject/REACT-PROJECT/src/AddCharacterForm.js\",\n  _s = $RefreshSig$();\n// AddCharacterForm.js\n\nimport React, { useState } from 'react';\nimport './AddCharacterForm.css'; // Import the CSS file for this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddCharacterForm({\n  onAddCharacter\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name || !imageUrl) {\n      alert('Please enter both the name and image URL.');\n      return;\n    }\n\n    // Create a new character object\n    const newCharacter = {\n      name: name,\n      image: imageUrl\n      // Add any additional properties you want to include in the character object\n    };\n\n    // Send a POST request to the backend to add the new character\n    fetch('http://localhost:3000/characters', {\n      // Replace 'http://localhost:3001/characters' with your JSON Server endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newCharacter)\n    }).then(response => response.json()).then(data => {\n      // Add the new character to the existing characters using the onAddCharacter callback\n      onAddCharacter(newCharacter);\n\n      // Reset the form fields\n      setName('');\n      setImageUrl('');\n    }).catch(error => {\n      console.error('Error adding character:', error);\n      alert('Failed to add character. Please try again later.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-character-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Character Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      placeholder: \"Image URL\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(AddCharacterForm, \"eXS14DDvZz/naKAS0H/PSlDFOcA=\");\n_c = AddCharacterForm;\nexport default AddCharacterForm;\nvar _c;\n$RefreshReg$(_c, \"AddCharacterForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddCharacterForm","onAddCharacter","_s","name","setName","imageUrl","setImageUrl","handleSubmit","e","preventDefault","alert","newCharacter","image","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pius/FinalProject/REACT-PROJECT/src/AddCharacterForm.js"],"sourcesContent":["// AddCharacterForm.js\n\nimport React, { useState } from 'react';\nimport './AddCharacterForm.css'; // Import the CSS file for this component\n\nfunction AddCharacterForm({ onAddCharacter }) {\n  const [name, setName] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !imageUrl) {\n      alert('Please enter both the name and image URL.');\n      return;\n    }\n\n    // Create a new character object\n    const newCharacter = {\n      name: name,\n      image: imageUrl,\n      // Add any additional properties you want to include in the character object\n    };\n\n    // Send a POST request to the backend to add the new character\n    fetch('http://localhost:3000/characters', { // Replace 'http://localhost:3001/characters' with your JSON Server endpoint\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newCharacter),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Add the new character to the existing characters using the onAddCharacter callback\n        onAddCharacter(newCharacter);\n\n        // Reset the form fields\n        setName('');\n        setImageUrl('');\n      })\n      .catch((error) => {\n        console.error('Error adding character:', error);\n        alert('Failed to add character. Please try again later.');\n      });\n  };\n\n  return (\n    <form className=\"add-character-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Character Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"url\"\n        placeholder=\"Image URL\"\n        value={imageUrl}\n        onChange={(e) => setImageUrl(e.target.value)}\n      />\n      <button type=\"submit\">Add Character</button>\n    </form>\n  );\n}\n\nexport default AddCharacterForm;\n\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,gBAAgBA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,IAAI,CAACE,QAAQ,EAAE;MACtBK,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;;IAEA;IACA,MAAMC,YAAY,GAAG;MACnBR,IAAI,EAAEA,IAAI;MACVS,KAAK,EAAEP;MACP;IACF,CAAC;;IAED;IACAQ,KAAK,CAAC,kCAAkC,EAAE;MAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,YAAY;IACnC,CAAC,CAAC,CACCQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACArB,cAAc,CAACU,YAAY,CAAC;;MAE5B;MACAP,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cd,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA;IAAM2B,SAAS,EAAC,oBAAoB;IAACC,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBAC1D7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE5B,IAAK;MACZ6B,QAAQ,EAAGxB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACyB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFtC,OAAA;MACE8B,IAAI,EAAC,KAAK;MACVC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAE1B,QAAS;MAChB2B,QAAQ,EAAGxB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACyB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFtC,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEX;AAACnC,EAAA,CA1DQF,gBAAgB;AAAAsC,EAAA,GAAhBtC,gBAAgB;AA4DzB,eAAeA,gBAAgB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}